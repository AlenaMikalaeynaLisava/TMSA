
// #### Task 2 üíª
// –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Bills –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ —Å:
// - –ø—Ä–∏–≤–∞—Ç–Ω—ã–º static –ø–æ–ª–µ–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º —Å—É–º–º—ã –¥–æ–ª–≥–æ–≤ 
// - –ø—É–±–ª–∏—á–Ω—ã–π static –º–µ—Ç–æ–¥–∞–º getBill (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ç–∏–ø–∞ string). 
//–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –ø–æ —Å—á–µ—Ç—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (–≤—Ä–æ–¥–µ fuel, flat rent –∏ —Ç–¥)
// - addBill (–ø–∞—Ä–∞–º–µ—Ç—Ä—ã string –∏ number). –î–æ–±–∞–≤–ª—è–µ—Ç –∫ —Å—á–µ—Ç—É string —Å—É–º–º—É number.
// –°–æ–∑–¥–∞–π—Ç–µ enum FuelCost, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø–æ–º–µ—Å—Ç–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ —Ç–æ–ø–ª–∏–≤–∞ –∏ –∏—Ö —Ü–µ–Ω—É
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–µ `fuelType`;
// –í –º–µ—Ç–æ–¥–µ `refuel` –¥–æ–±–∞–≤—å—Ç–µ —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã –∑–∞ —Ç–æ–ø–ª–∏–≤–æ —Å —É—á–µ—Ç–æ–º —Ç–∏–ø–∞ —Ç–æ–ø–ª–∏–≤–∞ –∏ –∑–∞–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –æ–±—ä—ë–º–∞ 
//(–¥–æ –∑–∞–ø—Ä–∞–≤–∫–∏ –≤ –º–∞—à–∏–Ω–µ –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è —Ç–æ–ø–ª–∏–≤–æ)





export class Bills {
    private static debtsAmount: Map<string,number>;
    constructor(debtsAmount: Map<string,number>){
        Bills.debtsAmount = debtsAmount
    }
    public static getBill(param:string):number{
        if(Bills.debtsAmount.has(param))
        return Bills.debtsAmount.get(param);
    };
    public static addBill(param:string, sum:number):void{
        if(Bills.debtsAmount.has(param)){
            const currentSum = Bills.debtsAmount.get(param);
            Bills.debtsAmount.set(param, currentSum+sum)
        } else  Bills.debtsAmount.set(param, sum)
    };
    public static sumBill():number{
        let sum = 0;
        for (let amount of Bills.debtsAmount.values()) {
            sum+=+amount;
          }
          if(!Bills.debtsAmount.has("tax")) Bills.debtsAmount.set("tax", 0)
          if(sum >10000){
            sum =Bills.debtsAmount.get("tax");
            for (let entry of Bills.debtsAmount) { 
                if(entry[0]!=="tax"){
                    Bills.debtsAmount.set("tax", entry[1]*1.2)
                    sum+=+entry[1]*1.2;
                }
            }            
          }
          return sum;
    }
}