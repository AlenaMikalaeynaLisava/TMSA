// #### Task 3 üñ•

// –î–∞–Ω –æ–±—ä–µ–∫—Ç cat. –°–∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ 2 —Å–ø–æ—Å–æ–±–∞–º–∏, –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è –≤ 1–æ–º –æ–±—ä–µ–∫—Ç–µ, —ç—Ç–æ –∂–µ –ø–æ–ª–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è
//  –≤–æ –≤—Ç–æ—Ä–æ–º –∏ —Ç—Ä–µ—Ç—å–µ–º –æ–±—ä–µ–∫—Ç–µ. –û–±—ä–µ–∫—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é —Ç–∏–ø–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

// ```javascript
// const cat = {
//       name: '–ï–Ω—á–∏–∫',
//       age: 3,
//    }
// ```

type Cat = {
    name : string,
    age : number
}
 const cat :Cat ={
      name: '–ï–Ω—á–∏–∫',
      age: 3,
 }

 const firstClone :Cat = { ...cat};
 //@ts-ignore
 const secondClone :Cat = JSON.parse(JSON.stringify(cat));// –ó–¥–µ—Å—å —Ö–æ—Ç–µ–ª–∞ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ structuredClone –Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å —É–ø–∞–ª–∞ –æ—à–∏–±–∫–∞
                                                          //const secondClone :Cat = structuredClone(cat);
                                                          //ReferenceError: structuredClone is not defined
 
 cat.age = 4;
 if((cat.age !== firstClone.age)&&(cat.age !== secondClone.age))
 console.log("–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è –≤ 1–æ–º –æ–±—ä–µ–∫—Ç–µ, —ç—Ç–æ –∂–µ –ø–æ–ª–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è –≤–æ –≤—Ç–æ—Ä–æ–º –∏ —Ç—Ä–µ—Ç—å–µ–º –æ–±—ä–µ–∫—Ç–µ");
