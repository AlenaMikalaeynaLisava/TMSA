// Task 1 üíª

//–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è. 
//–í—ã–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ `–ü—Ä–∏–≤–µ—Ç <–ò–º—è> <–§–∞–º–∏–ª–∏—è>` 5 —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑—É—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–∑–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
const readline = require("readline-sync");
const fullName = readline.question("Type your name and surname ");
const name1 = fullName.split(' ')[0];
const surname = fullName.split(' ')[1];

if(name1 && surname){
    console.log(`–ü—Ä–∏–≤–µ—Ç ${name1} ${surname}`);
    console.log(`–ü—Ä–∏–≤–µ—Ç ${name1.toUpperCase()} ${surname.toLowerCase()}`);
    console.log(`–ü—Ä–∏–≤–µ—Ç ${name1.toUpperCase()} ${surname.toUpperCase()}`);
    console.log(`–ü—Ä–∏–≤–µ—Ç ${name1.toLowerCase()} ${surname.toUpperCase()}`);
    console.log(`–ü—Ä–∏–≤–µ—Ç ${name1.toLowerCase()} ${surname.toLowerCase()}`);
} else {
    console.log(`Name is not correct`);
}

//Task 2 üíª

//–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'. 
//–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Å—Ç—Ä–æ–∫–µ: –µ—Å–ª–∏ –µ—Å—Ç—å - –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–∑–∏—Ü–∏—é –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ '—É—á—É', –µ—Å–ª–∏ –Ω–µ—Ç - –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É
// `–î–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç`

const string = "—è —É—á—É typescript!";
const word = readline.question("Type a word ");

if(string.includes(word)){
    console.log(string.indexOf("—É—á—É"));
} else {
    console.log("–î–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç");
}

//Task 3 üíª

//–î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ.
// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏, —Ç–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ: `–í—ã –≤—ã—à–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É —Å—Ç—Ä–æ–∫–∏`

const newStr = "ghyhijkul;lljnbbhili";
const position = readline.question("Type a number ");
const num = parseInt(position);

if(num> newStr.length-1){
console.log("–í—ã –≤—ã—à–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É —Å—Ç—Ä–æ–∫–∏")
}


// Task 4 üíª

//–î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç–æ—á–∫–æ–π –∏–ª–∏ –Ω–µ—Ç.
// –ï—Å–ª–∏ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - `–î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ`, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ `–í –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–æ—á–∫–∏`

const newStr4 = "This day is grate!";
const lastSymbol = newStr4[newStr4.length-1];

if(lastSymbol === ".")
    console.log("–î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ");
    else
    console.log("–í –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–æ—á–∫–∏");


// Task 5 üíª

//–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'. –í—ã—Ä–µ–∂–∏—Ç–µ –∏–∑ –Ω–µ–µ —Å–ª–æ–≤–æ '—É—á—É' –∏ —Å–ª–æ–≤–æ 'typescript' —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ (—á–µ—Ä–µ–∑ substring, slice).

const str5 = "—è —É—á—É typescript!";
const start1 = str5.indexOf("—É—á—É");
const end1 = start1 + "—É—á—É".length;
const study = str5.slice(start1, end1);
const start2 = str5.indexOf("typescript");
const end2 = start2 + "typescript".length;
const typesc = str5.substring(start2, end2);
console.log(study);
console.log(typesc);


// Task 6 üíª

//–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ split –∑–∞–ø–∏—à–∏—Ç–µ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

const str6 = "—è —É—á—É typescript!"
const arr = str6.split(' '); //–ó–¥–µ—Å—å –ø–æ–ª—É—á–∏—Ç—Å—è, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ typescript! –ò—Ö –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–∂–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å?


// Task 7 üíª

//–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '                —è —É—á—É typescript!                '. –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É, –±–µ–∑ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.

const str7 = "                —è —É—á—É typescript!                ";

console.log(str7.trim());


// Task 8 üíª

//–î–∞–Ω–æ —á–∏—Å–ª–æ 8.829734872948. –í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å 3 –∑–Ω–∞—á–∞—â–∞–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏

const number8 = 8.829734872948;

console.log(number8.toFixed(3));


// Task 9 üíª

//–î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º –∏–ª–∏ –Ω–µ—Ç. 
//–ï—Å–ª–∏ —è–≤–ª—è–µ—Ç—Å—è - –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç - –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ —Ü–µ–ª–æ–π —á–∞—Å—Ç–∏.

const someNum = parseInt(readline.question("Type a number "));

if(Number.isInteger(someNum))
console.log(someNum);
else console.log(Math.round(someNum));


// Task 10 üíª

//–î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ, 
//–±–æ–ª—å—à–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞.

const num10 = parseInt(readline.question("Type a number "));
const floor = Math.floor(num10);
const ceil = Math.ceil(num10);
const round = Math.round(num10);



// Task 12 üíª

//–î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –≤–æ–∑–≤–æ–¥—è—â–∏–π —á–∏—Å–ª–æ –≤ —Å—Ç–µ–ø–µ–Ω—å. 
//–°—Ç–µ–ø–µ–Ω—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫ –º–µ—Ç–æ–¥—É.

const num12 = parseInt(readline.question("Type a number "));
const power = parseInt(readline.question("Type a power "));
console.log(Math.pow(num12, power))


// Task 14 üíª

//–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ. –î–∏–∞–ø–∞–∑–æ–Ω –∑–∞–¥–∞–µ—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ñ—É–Ω—Ü–∏–∏

const start14 = Math.floor(parseInt(readline.question("Type a number ")));
const end14 = Math.floor(parseInt(readline.question("Type a number ")));
if(start14 > end14){
    console.log(Math.floor(Math.random()*(end14-start14)) +start14)
} else {
    console.log(Math.floor(Math.random()*(start14-end14)) + end14)
}



// Task 15 üíª

//–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ. –î–∏–∞–ø–∞–∑–æ–Ω –∑–∞–¥–∞–µ—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ñ—É–Ω—Ü–∏–∏

const start15 = parseInt(readline.question("Type a number "));
const end15 = parseInt(readline.question("Type a number "));
if(start15 > end15){
    console.log(Math.random()*(end15-start15) +start15)
} else {
    console.log(Math.random()*(start15-end15) + end15)
}



// Task 16 üíª

//–í—ã–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–µ–≥–æ–¥–Ω–µ—à–Ω–µ–≥–æ –¥–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞: –º–µ—Å—è—Ü/–≥–æ–¥/–¥–µ–Ω—å. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.".
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ç–æ–¥—ã Date.

const date : Date = new Date();
console.log(`—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞: ${date.getMonth()+1}/${date.getFullYear()}/${date.getDate()}. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}.`)


// Task 17 üíª
//–ü–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —á—Ç–æ-–ª–∏–±–æ. 
//–í—ã–≤–µ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ–Ω –ø–∏—Å–∞–ª (—Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º) –∏ —Å—É–º–º—É –≤—Å–µ—Ö —Ü–∏—Ñ—Ä –≤ —Ç–µ–∫—Å—Ç–µ

const start = Date.now();
const text = readline.question("Type a string ");
const end = Date.now();
console.log(Math.round(+end-+start));
const regexp = /\d/g;
const a = text.match(regexp);
let s =0;
for (let i=0; i<a.length; i++){
s +=+a[i];
}
console.log(s);


// #### Task 18 Advanced üíª
// –í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–æ–ª–∂–Ω–æ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫): 
// "–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é:
// 1. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
// 2. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
// 3. –ò–≥—Ä–∞ —É–≥–∞–¥–∞–π"
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3. 
// –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç—Å—è —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑" –∏ —Ç–æ –∂–µ —Å–∞–º–æ–µ –º–µ–Ω—é (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å console.clear() –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Å–æ–ª–∏).
// ###### –í —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ 2 —á–∏—Å–ª–∞ –∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ (–º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Ç–∞–∫–∂–µ –≤ –≤–∏–¥–µ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é):
// –°–ª–æ–∂–µ–Ω–∏–µ
// –í—ã—á–∏—Ç–∞–Ω–∏–µ
// –£–º–Ω–æ–∂–µ–Ω–∏–µ
// –î–µ–ª–µ–Ω–∏–µ
// –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
// –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è 1 —á–∏—Å–ª–∞ –Ω–∞ 2
// ###### –í —Å–ª—É—á–∞–µ –≤—ã–±–æ—Ä–∞ 2 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –æ—Ç—á–µ—Å—Ç–≤–æ, –≤–æ–∑—Ä–∞—Å—Ç –∏ 3 –ª—é–±—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫–æ–Ω—å, –ø—ë—Å, –∂–∏—Ä–∞—Ñ". 
// –ü–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤—ã–≤–µ—Å—Ç–∏:
// –ò–º—è –≤–∞—à–µ–≥–æ –æ—Ç—Ü–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å <3-5 –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤ –æ—Ç—á–µ—Å—Ç–≤–∞>
// –í—ã —Ä–æ–¥–∏–ª–∏—Å—å –≤ *** –≥–æ–¥—É
// –í–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –Ω–µ —Ç–æ—á–Ω–æ, —á—Ç–æ –≤ –ø—Ä–æ—à–ª–æ–π –∂–∏–∑–Ω–∏ –≤—ã –±—ã–ª–∏ <–æ–¥–Ω–æ –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö>
// ###### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É (–æ—Ç 5 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ —á–∏—Å–ª–æ (–æ—Ç 5 –¥–æ 15). –î–∞–ª–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —É–≥–∞–¥–∞—Ç—å:
// –ß–∏—Å–ª–æ (n): –µ—Å–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 20, —Ç–æ –±–µ—Ä—ë—Ç—Å—è 20, —Ä–∞–Ω–¥–æ–º–Ω–æ –±–µ—Ä–µ—Ç—Å—è —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ n. 
// –°—Ç—Ä–æ–∫–∞ (n - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏): –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –±–æ–ª—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 20, —Ä–∞–Ω–¥–æ–º–Ω–æ –±–µ—Ä–µ—Ç—Å—è —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏.
// –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è n / 3 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É) –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –ª–∏–±–æ —Å–∏–º–≤–æ–ª.
// –ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ: "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏"
// –ü—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º: "–ê –≤–æ—Ç –∏ –Ω–µ—Ç. –ï—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?"
// –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π: "–í —ç—Ç–æ—Ç —Ä–∞–∑ –∫–∞–∫-—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å, –∑–∞—Ö–æ–¥–∏—Ç–µ –µ—â–µ"

let number = Math.floor(parseInt(readline.question("–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é: \n1. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n2. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ\n3. –ò–≥—Ä–∞ —É–≥–∞–¥–∞–π\n")));
if(number>3||number<1){
    console.log("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑");
    console.clear();
    number = readline.question("–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é: \n1. –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n2. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ\n3. –ò–≥—Ä–∞ —É–≥–∞–¥–∞–π\n");
} else {
    switch(number){
        case 1:
            let case1 = readline.question("–í–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞ –∏ —Ü–∏—Ñ—Ä—É –∏–∑ –º–µ–Ω—é: \n1. –°–ª–æ–∂–µ–Ω–∏–µ\n2. –í—ã—á–∏—Ç–∞–Ω–∏–µ\n3. –£–º–Ω–æ–∂–µ–Ω–∏–µ\n4. –î–µ–ª–µ–Ω–∏–µ\n5. –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å\n6. –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è 1 —á–∏—Å–ª–∞ –Ω–∞ 2\n "); 
            const arr = case1.split(" ");
            const num1 = +arr[0];
            const num2 = +arr[1];
            const num3 = +arr[2]
            console.log( num1, num2, num3)
            switch(num3){
                case 1:
console.log(num1 + num2);
break;  
                case 2:
                    console.log(num1 - num2);
                    break;  
                case 3:
                    console.log(num1 * num2);
                    break;  
                case 4:
                    console.log(num1 / num2);
                    break;  
                case 5:
                    console.log(Math.pow(num1, num2));
                    break;  
                case 6:
                    console.log(num1 % num2);
            break;        
            }   
            break;
        case 2:
            let patronymic = readline.question("–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ\n");
            let age = readline.question("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç\n");
            let animal = readline.question("–í–≤–µ–¥–∏—Ç–µ 3 –ª—é–±—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–æ–Ω—å, –ø—ë—Å, –∂–∏—Ä–∞—Ñ\n");
            console.log(`–ò–º—è –≤–∞—à–µ–≥–æ –æ—Ç—Ü–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ${patronymic.substring(0,3)}`);
            console.log(`–í—ã —Ä–æ–¥–∏–ª–∏—Å—å –≤ ${2022 - +age} –≥–æ–¥—É`);
            console.log(`–í–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –Ω–µ —Ç–æ—á–Ω–æ, —á—Ç–æ –≤ –ø—Ä–æ—à–ª–æ–π –∂–∏–∑–Ω–∏ –≤—ã –±—ã–ª–∏ ${animal.split(' ')[1]}`);
            break;  
        default :
        const stringDef = readline.question("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É (–æ—Ç 5 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ —á–∏—Å–ª–æ (–æ—Ç 5 –¥–æ 15) ");
        const strT = parseInt(stringDef);
        if(strT){
            const randomN = Math.floor(Math.random()*(15-5))+5;
            for (let i=0; i<Math.floor((15-5)/3); i++){
                const guessNum = parseInt(readline.question("–£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 5 –¥–æ 15 "));
                if(+guessNum === randomN){
                    console.log("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏");
                    break
                }
                else{
                    if(i<(Math.floor((15-5)/3)-1))
                    console.log("–ê –≤–æ—Ç –∏ –Ω–µ—Ç. –ï—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?");
                    else console.log("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏");
                }
            }

        } else {
            const max = stringDef.length-1;
            const randomS = Math.floor(Math.random()*max);
            for (let i=0; i<Math.floor((max+1)/3); i++){
                const guessSymb = parseInt(readline.question("–£–≥–∞–¥–∞–π—Ç–µ —Å–∏–º–≤–æ–ª –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ "));
                if(guessSymb === stringDef[randomS]){
                    console.log("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏");
                    break
                }
                else{
                    if(i<(Math.floor((max+1)/3)-1))
                    console.log("–ê –≤–æ—Ç –∏ –Ω–µ—Ç. –ï—â–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?");
                    else console.log("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏");
                }
            }

        }
        //console.log(strT);
        //const type = stringDef
        // const numDef = parseInt(readline.question("–£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç "));
        // const stmbDef = readline.question("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É (–æ—Ç 5 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤) –∏–ª–∏ —á–∏—Å–ª–æ (–æ—Ç 5 –¥–æ 15) ");
    }
}
//console.log(number)

